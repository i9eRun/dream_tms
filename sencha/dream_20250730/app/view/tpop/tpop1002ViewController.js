/*
 * File: app/view/tpop/tpop1002ViewController.js
 *
 * This file was generated by Sencha Architect version 4.3.7.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 7.9.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 7.9.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('dream.view.tpop.tpop1002ViewController', {
    extend: 'Ext.app.ViewController',
    alias: 'controller.tpop.tpop1002',

    onGridpanelItemDblClick_tpop1002: function(dataview, record, item, index, e, eOpts) {
        const view = this.getView();

        // 부모에게 사용자 정보 전달 (이벤트 방식)
        view.fireEvent('selectUser', view, record);

        // 팝업 닫기
        view.close();
    },

    onTpop1002_useynAfterRender: function(component, eOpts) {
        dream.util.Common.setFlagCombo(component,"사용","전체","");
    },

    onTpop1002_search_buttonClick: function(button, e, eOpts) {
        const grid = Ext.ComponentQuery.query('grid[reference=tpop1002_dept_search_grid]')[0];
        const store = grid.getStore();
        const keyword = Ext.getCmp('tpop1002_keyword').getValue();
        const useYn = Ext.getCmp('tpop1002_useyn').getValue();

        store.getProxy().setExtraParams({
            userCetCd: dream.util.Common.LOGIN_USER_CET_CD,
            keyword: keyword,
            useYn: useYn
        });

        store.reload();
    },

    onTpop1002_confirm_buttonClick: function(button, e, eOpts) {
        const view = this.getView();
        const grid = view.lookupReference('tpop1002_dept_search_grid');
        const selection = grid.getSelectionModel().getSelection();

        if (selection.length === 0) {
            Ext.Msg.alert('알림', '데이터 로우를 선택해주세요.');
            return;
        }

        const record = selection[0];

        // 부모에게 사용자 정보 전달 (이벤트 방식)
        view.fireEvent('selectUser', view, record);

        // 팝업 닫기
        view.close();
    },

    onTpop1002_cancel_buttonClick: function(button, e, eOpts) {
        button.up('window').close();
    },

    onWindowAfterRender_tpop1002: function(component, eOpts) {
        const grid = Ext.ComponentQuery.query('grid[reference=tpop1002_dept_search_grid]')[0];
        const store = grid.getStore();

        store.getProxy().setUrl(dream.util.Common.BASE_URL+'/tpop/deptlist');
    }

});

{
    "type": "Ext.panel.Panel",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "designer|snapToGrid": 10,
        "designer|userAlias": "tbas.tbas1011",
        "designer|userClassName": "tbas.tbas1011",
        "height": 850,
        "layout": "absolute",
        "title": "",
        "width": 1600
    },
    "configAlternates": {
        "designer|snapToGrid": "number",
        "designer|userAlias": "string",
        "designer|userClassName": "string",
        "height": "auto",
        "layout": "string",
        "title": "string",
        "width": "auto"
    },
    "name": "MyPanel",
    "designerId": "d98ef78c-0b5e-4df6-a5f1-28dc03676931",
    "viewControllerInstanceId": "1c07916d-6849-496e-98d9-626d6ad8e7ce",
    "viewModelInstanceId": "75b798ca-c2ad-408b-85c3-2b27ed00d289",
    "cn": [
        {
            "type": "Ext.form.Label",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "layout|x": 10,
                "layout|y": 10,
                "text": "수배송관리 [TBAS1011]"
            },
            "configAlternates": {
                "layout|x": "number",
                "layout|y": "number",
                "text": "string"
            },
            "name": "MyLabel2",
            "designerId": "edf97789-ed76-43b5-abf3-c0c01ad61e70"
        },
        {
            "type": "Ext.grid.Panel",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "height": 610,
                "layout|x": 10,
                "layout|y": 180,
                "reference": "list_grid",
                "store": "tbas.tbas1011.TmsSubVO",
                "title": "수배송 리스트",
                "width": 800
            },
            "configAlternates": {
                "height": "auto",
                "layout|x": "number",
                "layout|y": "number",
                "title": "string",
                "reference": "string",
                "store": "store",
                "width": "auto"
            },
            "name": "MyGridPanel3",
            "designerId": "f46f65d8-1f84-4391-96dc-4e5ce1ec67a3",
            "cn": [
                {
                    "type": "Ext.grid.column.RowNumberer",
                    "reference": {
                        "name": "columns",
                        "type": "array"
                    },
                    "codeClass": null,
                    "userConfig": {
                        "align": "center",
                        "text": "번호",
                        "width": 50
                    },
                    "configAlternates": {
                        "text": "string",
                        "width": "auto",
                        "align": "string"
                    },
                    "name": "MyRowNumberer",
                    "designerId": "a0dd2138-56b9-4894-a8e8-eee145f987bf"
                },
                {
                    "type": "Ext.grid.column.Column",
                    "reference": {
                        "name": "columns",
                        "type": "array"
                    },
                    "codeClass": null,
                    "userConfig": {
                        "align": "center",
                        "dataIndex": "custGb",
                        "text": "거래처구분",
                        "width": 80
                    },
                    "configAlternates": {
                        "text": "string",
                        "align": "string",
                        "dataIndex": "datafield",
                        "width": "auto"
                    },
                    "name": "MyColumn8",
                    "designerId": "4690cf13-71f3-47eb-8060-d4b8ce079f55",
                    "cn": [
                        {
                            "type": "fixedfunction",
                            "reference": {
                                "name": "items",
                                "type": "array"
                            },
                            "codeClass": null,
                            "userConfig": {
                                "designer|params": [
                                    "value",
                                    "metaData",
                                    "record",
                                    "rowIndex",
                                    "colIndex",
                                    "store",
                                    "view"
                                ],
                                "fn": "renderer",
                                "implHandler": [
                                    "return dream.util.Common.createCodeRenderer('168',value);"
                                ]
                            },
                            "configAlternates": {
                                "designer|params": "typedarray",
                                "fn": "string",
                                "implHandler": "code"
                            },
                            "name": "renderer",
                            "designerId": "08ab08ee-2b8c-4d9b-8b0a-2d927f294551"
                        }
                    ]
                },
                {
                    "type": "Ext.grid.column.Column",
                    "reference": {
                        "name": "columns",
                        "type": "array"
                    },
                    "codeClass": null,
                    "userConfig": {
                        "dataIndex": "custCd",
                        "text": "거래처코드",
                        "width": 70
                    },
                    "configAlternates": {
                        "text": "string",
                        "dataIndex": "datafield",
                        "width": "auto"
                    },
                    "name": "MyColumn1",
                    "designerId": "fdea38e3-4a5c-4164-bbb8-357936f8cbfe"
                },
                {
                    "type": "Ext.grid.column.Column",
                    "reference": {
                        "name": "columns",
                        "type": "array"
                    },
                    "codeClass": null,
                    "userConfig": {
                        "dataIndex": "custNm",
                        "text": "거래처명",
                        "width": 200
                    },
                    "configAlternates": {
                        "text": "string",
                        "dataIndex": "datafield",
                        "width": "auto"
                    },
                    "name": "MyColumn4",
                    "designerId": "a585c35e-ddc1-46b3-ba0c-094f6707927c"
                },
                {
                    "type": "Ext.grid.column.Column",
                    "reference": {
                        "name": "columns",
                        "type": "array"
                    },
                    "codeClass": null,
                    "userConfig": {
                        "dataIndex": "jiyukNm",
                        "text": "지역"
                    },
                    "configAlternates": {
                        "text": "string",
                        "dataIndex": "datafield"
                    },
                    "name": "MyColumn3",
                    "designerId": "7a062924-f51b-4adb-baf9-30912fdc4e7b"
                },
                {
                    "type": "Ext.grid.column.Column",
                    "reference": {
                        "name": "columns",
                        "type": "array"
                    },
                    "codeClass": null,
                    "userConfig": {
                        "align": "center",
                        "dataIndex": "cusCd",
                        "text": "코스코드",
                        "width": 60
                    },
                    "configAlternates": {
                        "text": "string",
                        "align": "string",
                        "dataIndex": "datafield",
                        "width": "auto"
                    },
                    "name": "MyColumn5",
                    "designerId": "1413dccb-de49-4137-974d-658992675820"
                },
                {
                    "type": "Ext.grid.column.Column",
                    "reference": {
                        "name": "columns",
                        "type": "array"
                    },
                    "codeClass": null,
                    "userConfig": {
                        "align": "center",
                        "dataIndex": "subSunbun",
                        "text": "순번",
                        "width": 60
                    },
                    "configAlternates": {
                        "text": "string",
                        "align": "string",
                        "dataIndex": "datafield",
                        "width": "auto"
                    },
                    "name": "MyColumn6",
                    "designerId": "2555b3dc-64f3-4992-89dd-311252c0a8f3",
                    "cn": [
                        {
                            "type": "Ext.form.field.Text",
                            "reference": {
                                "name": "editor",
                                "type": "object"
                            },
                            "codeClass": null,
                            "name": "MyTextField2",
                            "designerId": "3032bad1-cef0-42b8-aebb-37c42d432c5b",
                            "cn": [
                                {
                                    "type": "viewcontrollereventbinding",
                                    "reference": {
                                        "name": "listeners",
                                        "type": "array"
                                    },
                                    "codeClass": null,
                                    "userConfig": {
                                        "fn": "onTextfieldAfterRender",
                                        "implHandler": [
                                            "const grid = this.lookupReference('list_grid');",
                                            "const store = grid.getStore();",
                                            "const view = this.getView(); // View 접근",
                                            "",
                                            "component.on('specialkey', function(component, e) {",
                                            "    if (e.getKey() === e.ENTER) {",
                                            "        const editedValue = parseInt(component.getValue());",
                                            "",
                                            "        if (isNaN(editedValue)) {",
                                            "            Ext.Msg.alert('오류', '숫자만 입력 가능합니다.');",
                                            "            return;",
                                            "        }",
                                            "",
                                            "        const selectionModel = grid.getSelectionModel();",
                                            "        const record = selectionModel.getSelection()[0];",
                                            "",
                                            "        if (!record) {",
                                            "            Ext.Msg.alert('오류', '편집 대상 레코드를 찾을 수 없습니다.');",
                                            "            return;",
                                            "        }",
                                            "",
                                            "        const cusCd = record.get('cusCd');",
                                            "        const oldValue = view.originalSunbun;",
                                            "",
                                            "        // 변경 없으면 무시",
                                            "        if (oldValue === editedValue) return;",
                                            "",
                                            "        // oldSubSunbun 백업",
                                            "        record.set('oldSubSunbun', oldValue);",
                                            "",
                                            "        // 3. 순번 충돌 방지 처리",
                                            "        store.each(function(rec) {",
                                            "            if (rec === record || rec.get('cusCd') !== cusCd) return;",
                                            "",
                                            "            const sunbun = parseInt(rec.get('subSunbun'));",
                                            "",
                                            "            if (editedValue < oldValue) {",
                                            "                // 앞으로 당김: 중간 순번들 +1",
                                            "                if (sunbun >= editedValue && sunbun < oldValue) {",
                                            "                    rec.set('subSunbun', sunbun + 1);",
                                            "                    rec.set('oldSubSunbun', sunbun);",
                                            "                }",
                                            "            } else {",
                                            "                // 뒤로 밀림: 중간 순번들 -1",
                                            "                if (sunbun <= editedValue && sunbun > oldValue) {",
                                            "                    rec.set('subSunbun', sunbun - 1);",
                                            "                    rec.set('oldSubSunbun', sunbun);",
                                            "                }",
                                            "            }",
                                            "        });",
                                            "",
                                            "        // 4. 자기 자신 순번 설정",
                                            "        record.set('subSunbun', editedValue);",
                                            "",
                                            "        // 5. 정렬 및 선택 유지",
                                            "        store.sort([{ property: 'subSunbun', direction: 'ASC' }]);",
                                            "",
                                            "        Ext.defer(function() {",
                                            "            const idx = store.indexOf(record);",
                                            "            if (idx !== -1) {",
                                            "                grid.getSelectionModel().select(idx);",
                                            "            }",
                                            "        }, 100);",
                                            "    }",
                                            "}, this);",
                                            "",
                                            "",
                                            "",
                                            "",
                                            "",
                                            "",
                                            "",
                                            ""
                                        ],
                                        "name": "afterrender",
                                        "scope": "me"
                                    },
                                    "configAlternates": {
                                        "fn": "string",
                                        "implHandler": "code",
                                        "name": "string",
                                        "scope": "string"
                                    },
                                    "name": "onTextfieldAfterRender",
                                    "designerId": "9e337021-5364-4233-940c-89c5f6a6445a"
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "Ext.grid.column.Column",
                    "reference": {
                        "name": "columns",
                        "type": "array"
                    },
                    "codeClass": null,
                    "userConfig": {
                        "align": "center",
                        "dataIndex": "subWorkGb",
                        "text": "수거배송",
                        "width": 60
                    },
                    "configAlternates": {
                        "text": "string",
                        "align": "string",
                        "dataIndex": "datafield",
                        "width": "auto"
                    },
                    "name": "MyColumn7",
                    "designerId": "1aa01615-22f5-4351-91e7-045a1ec2b72f",
                    "cn": [
                        {
                            "type": "fixedfunction",
                            "reference": {
                                "name": "items",
                                "type": "array"
                            },
                            "codeClass": null,
                            "userConfig": {
                                "designer|params": [
                                    "value",
                                    "metaData",
                                    "record",
                                    "rowIndex",
                                    "colIndex",
                                    "store",
                                    "view"
                                ],
                                "fn": "renderer",
                                "implHandler": [
                                    "return dream.util.Common.createCodeRenderer('1003',value);"
                                ]
                            },
                            "configAlternates": {
                                "designer|params": "typedarray",
                                "fn": "string",
                                "implHandler": "code"
                            },
                            "name": "renderer",
                            "designerId": "637b774f-819a-4243-be9a-e8b4d63b4a37"
                        }
                    ]
                },
                {
                    "type": "Ext.grid.column.Column",
                    "reference": {
                        "name": "columns",
                        "type": "array"
                    },
                    "codeClass": null,
                    "userConfig": {
                        "align": "center",
                        "dataIndex": "subOrderGb",
                        "text": "정반구분",
                        "width": 60
                    },
                    "configAlternates": {
                        "text": "string",
                        "align": "string",
                        "dataIndex": "datafield",
                        "width": "auto"
                    },
                    "name": "MyColumn9",
                    "designerId": "436f0334-8d54-4843-a7b3-cfe66ab67491",
                    "cn": [
                        {
                            "type": "fixedfunction",
                            "reference": {
                                "name": "items",
                                "type": "array"
                            },
                            "codeClass": null,
                            "userConfig": {
                                "designer|params": [
                                    "value",
                                    "metaData",
                                    "record",
                                    "rowIndex",
                                    "colIndex",
                                    "store",
                                    "view"
                                ],
                                "fn": "renderer",
                                "implHandler": [
                                    "return dream.util.Common.createCodeRenderer('1022',value);"
                                ]
                            },
                            "configAlternates": {
                                "designer|params": "typedarray",
                                "fn": "string",
                                "implHandler": "code"
                            },
                            "name": "renderer",
                            "designerId": "06ad68c1-68b5-420b-a294-c8d60d2b9fe1"
                        }
                    ]
                },
                {
                    "type": "viewcontrollereventbinding",
                    "reference": {
                        "name": "listeners",
                        "type": "array"
                    },
                    "codeClass": null,
                    "userConfig": {
                        "fn": "onGridpanelAfterRender_list_grid",
                        "implHandler": [
                            "const store = component.getStore();",
                            "",
                            "// 1. proxy의 URL을 동적으로 설정",
                            "store.getProxy().setUrl(dream.util.Common.BASE_URL+'/tbas/1011/list');",
                            "",
                            "// 2. 필요 시 추가 파라미터 설정 (예: userCetCd 등)",
                            "store.getProxy().setExtraParams({",
                            "    userCetCd: dream.util.Common.LOGIN_USER_CET_CD",
                            "});",
                            ""
                        ],
                        "name": "afterrender",
                        "scope": "me"
                    },
                    "configAlternates": {
                        "fn": "string",
                        "implHandler": "code",
                        "name": "string",
                        "scope": "string"
                    },
                    "name": "onGridpanelAfterRender_list_grid",
                    "designerId": "fcc60840-ce06-45bf-88e8-2696248177d7"
                },
                {
                    "type": "Ext.grid.plugin.CellEditing",
                    "reference": {
                        "name": "plugins",
                        "type": "array"
                    },
                    "codeClass": null,
                    "userConfig": {
                        "clicksToEdit": 1
                    },
                    "configAlternates": {
                        "clicksToEdit": "number"
                    },
                    "name": "MyCellEditingPlugin",
                    "designerId": "774a4122-2f98-45f2-b73b-deea0418e2c3"
                },
                {
                    "type": "viewcontrollereventbinding",
                    "reference": {
                        "name": "listeners",
                        "type": "array"
                    },
                    "codeClass": null,
                    "userConfig": {
                        "fn": "onGridpanelCellClick",
                        "implHandler": [
                            "const column = tableview.getHeaderAtIndex(cellIndex);",
                            "const columnDataIndex = column.dataIndex;",
                            "",
                            "if (columnDataIndex === 'subSunbun') {",
                            "    const originalValue = parseInt(record.get('subSunbun'));",
                            "    this.getView().originalSunbun = originalValue;",
                            "    console.log('originalSunbun 저장됨:', originalValue);",
                            "}"
                        ],
                        "name": "cellclick",
                        "scope": "me"
                    },
                    "configAlternates": {
                        "fn": "string",
                        "implHandler": "code",
                        "name": "string",
                        "scope": "string"
                    },
                    "name": "onGridpanelCellClick",
                    "designerId": "222c68de-0df4-48cd-8715-61bd6826d8ea"
                }
            ]
        },
        {
            "type": "Ext.form.field.Text",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fieldLabel": "코스선택",
                "labelWidth": 60,
                "layout|x": 10,
                "layout|y": 80,
                "reference": "search_cusCd",
                "width": 140
            },
            "configAlternates": {
                "fieldLabel": "string",
                "layout|x": "number",
                "layout|y": "number",
                "labelWidth": "number",
                "reference": "string",
                "width": "auto"
            },
            "name": "MyTextField3",
            "designerId": "c38b8ad7-6531-4821-96ff-426765059d0e",
            "cn": [
                {
                    "type": "viewcontrollereventbinding",
                    "reference": {
                        "name": "listeners",
                        "type": "array"
                    },
                    "codeClass": null,
                    "userConfig": {
                        "fn": "onTextfieldAfterRender_search_cusCd",
                        "implHandler": [
                            "const button = this.lookupReference('search_button');",
                            "component.on('specialkey', function(component, e) {",
                            "    if (e.getKey() === e.ENTER) {",
                            "        if (button) {",
                            "            button.fireEvent('click', button);",
                            "        }",
                            "    }",
                            "});"
                        ],
                        "name": "afterrender",
                        "scope": "me"
                    },
                    "configAlternates": {
                        "fn": "string",
                        "implHandler": "code",
                        "name": "string",
                        "scope": "string"
                    },
                    "name": "onTextfieldAfterRender_search_cusCd",
                    "designerId": "126a21ee-e115-413b-86cc-6255c7e79f41"
                }
            ]
        },
        {
            "type": "Ext.form.field.Text",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fieldLabel": "거래처명",
                "labelWidth": 60,
                "layout|x": 610,
                "layout|y": 140,
                "reference": "search_cusNm",
                "width": 140
            },
            "configAlternates": {
                "fieldLabel": "string",
                "layout|x": "number",
                "layout|y": "number",
                "labelWidth": "number",
                "reference": "string",
                "width": "auto"
            },
            "name": "MyTextField4",
            "designerId": "2cf6de0d-3c2e-4694-a803-69d2a62802bf",
            "cn": [
                {
                    "type": "viewcontrollereventbinding",
                    "reference": {
                        "name": "listeners",
                        "type": "array"
                    },
                    "codeClass": null,
                    "userConfig": {
                        "fn": "onTextfieldAfterRender_search_cusCd1",
                        "implHandler": [
                            "const button = this.lookupReference('sunbun_search_button');",
                            "component.on('specialkey', function(component, e) {",
                            "    if (e.getKey() === e.ENTER) {",
                            "        if (button) {",
                            "            button.fireEvent('click', button);",
                            "        }",
                            "    }",
                            "});"
                        ],
                        "name": "afterrender",
                        "scope": "me"
                    },
                    "configAlternates": {
                        "fn": "string",
                        "implHandler": "code",
                        "name": "string",
                        "scope": "string"
                    },
                    "name": "onTextfieldAfterRender_search_cusCd1",
                    "designerId": "02aa1b3f-02f6-4d22-8e63-3113ecebe333"
                }
            ]
        },
        {
            "type": "Ext.button.Button",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "layout|x": 150,
                "layout|y": 80,
                "reference": "search_button",
                "text": "찾기",
                "width": 60
            },
            "configAlternates": {
                "layout|x": "number",
                "layout|y": "number",
                "reference": "string",
                "text": "string",
                "width": "auto"
            },
            "name": "MyButton",
            "designerId": "a944c8f1-b138-4f99-aa7e-eaa42bb12b73",
            "cn": [
                {
                    "type": "viewcontrollereventbinding",
                    "reference": {
                        "name": "listeners",
                        "type": "array"
                    },
                    "codeClass": null,
                    "userConfig": {
                        "fn": "onButtonClick_search_button",
                        "implHandler": [
                            "const popup = Ext.create('dream.view.tpop.tpop1005');",
                            "const me = this;",
                            "",
                            "popup.on('selectUser', function(win, record) {",
                            "    const sch_cusCd = me.lookupReference('search_cusCd');",
                            "",
                            "    sch_cusCd.setValue(record.get('cusCd'));",
                            "",
                            "});",
                            "",
                            "popup.show();"
                        ],
                        "name": "click",
                        "scope": "me"
                    },
                    "configAlternates": {
                        "fn": "string",
                        "implHandler": "code",
                        "name": "string",
                        "scope": "string"
                    },
                    "name": "onButtonClick_search_button",
                    "designerId": "6ac83810-8ad0-4f41-b4b3-a36e5daf737f"
                }
            ]
        },
        {
            "type": "Ext.button.Button",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "layout|x": 10,
                "layout|y": 140,
                "reference": "reset_button",
                "text": "초기화",
                "width": 60
            },
            "configAlternates": {
                "layout|x": "number",
                "layout|y": "number",
                "text": "string",
                "width": "auto",
                "reference": "string"
            },
            "name": "MyButton6",
            "designerId": "a75234dc-1441-4884-8b4e-546cab60f90d",
            "cn": [
                {
                    "type": "viewcontrollereventbinding",
                    "reference": {
                        "name": "listeners",
                        "type": "array"
                    },
                    "codeClass": null,
                    "userConfig": {
                        "fn": "onButtonClick_reset_button",
                        "implHandler": [
                            "const grid = this.lookupReference('list_grid');",
                            "const store = grid.getStore();",
                            "",
                            "store.rejectChanges();",
                            "store.removeAll();"
                        ],
                        "name": "click",
                        "scope": "me"
                    },
                    "configAlternates": {
                        "fn": "string",
                        "implHandler": "code",
                        "name": "string",
                        "scope": "string"
                    },
                    "name": "onButtonClick_reset_button",
                    "designerId": "429a3e83-a39a-4bda-86a6-af0a15d398ca"
                }
            ]
        },
        {
            "type": "Ext.button.Button",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "layout|x": 80,
                "layout|y": 140,
                "reference": "load_button",
                "text": "불러오기",
                "width": 60
            },
            "configAlternates": {
                "layout|x": "number",
                "layout|y": "number",
                "text": "string",
                "width": "auto",
                "reference": "string"
            },
            "name": "MyButton17",
            "designerId": "4015bc13-4175-4ca0-993b-6967400674a7",
            "cn": [
                {
                    "type": "viewcontrollereventbinding",
                    "reference": {
                        "name": "listeners",
                        "type": "array"
                    },
                    "codeClass": null,
                    "userConfig": {
                        "fn": "onButtonClick_load_button",
                        "implHandler": [
                            "const search_cusCd = this.lookupReference('search_cusCd').getValue();",
                            "const store = this.lookupReference('list_grid').getStore();",
                            "",
                            "if (!search_cusCd) {",
                            "    Ext.Msg.alert('알림', '코스를 선택해주세요!');",
                            "    return;",
                            "}",
                            "",
                            "store.getProxy().setExtraParams({",
                            "    userCetCd: dream.util.Common.LOGIN_USER_CET_CD,",
                            "    cusCd: search_cusCd",
                            "});",
                            "",
                            "store.load({",
                            "    callback: function (records) {",
                            "        records.forEach(record => {",
                            "            record.set('oldSubSunbun', record.get('subSunbun'));",
                            "        });",
                            "    }",
                            "});"
                        ],
                        "name": "click",
                        "scope": "me"
                    },
                    "configAlternates": {
                        "fn": "string",
                        "implHandler": "code",
                        "name": "string",
                        "scope": "string"
                    },
                    "name": "onButtonClick_load_button",
                    "designerId": "208a3215-3dd7-4334-ad89-1a0f40760ce1"
                }
            ]
        },
        {
            "type": "Ext.button.Button",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "layout|x": 150,
                "layout|y": 140,
                "reference": "add_button",
                "text": "자료추가",
                "width": 60
            },
            "configAlternates": {
                "layout|x": "number",
                "layout|y": "number",
                "text": "string",
                "width": "auto",
                "reference": "string"
            },
            "name": "MyButton18",
            "designerId": "6977d9c9-7c5d-4c2a-a89e-340a1e649372",
            "cn": [
                {
                    "type": "viewcontrollereventbinding",
                    "reference": {
                        "name": "listeners",
                        "type": "array"
                    },
                    "codeClass": null,
                    "userConfig": {
                        "fn": "onButtonClick_add_button",
                        "implHandler": [
                            "",
                            "const grid = this.lookupReference('list_grid');",
                            "const store = grid.getStore();",
                            "const selection = grid.getSelection()[0];",
                            "",
                            "if (!selection) {",
                            "    Ext.Msg.alert('오류', '행을 먼저 선택해주세요.');",
                            "    return;",
                            "}",
                            "",
                            "const baseIndex = Number(selection.get('subSunbun')); // 기준 순번",
                            "const cusCd = selection.get('cusCd'); // 동일 그룹",
                            "",
                            "const popup = Ext.create('dream.view.tpop.tpop1003');",
                            "const me = this;",
                            "",
                            "// ✅ 팝업에서 거래처 선택 시 이후 로직 실행",
                            "popup.on('selectUser', function(win, record) {",
                            "    console.log(record);",
                            "    const selectedCustCd = record.get('CUST_CD');",
                            "    const selectedCustGb = record.get('CUST_GB');",
                            "    const selectedCustNm = record.get('CUST_NM');",
                            "    const selectedjiyukNm = record.get('JIYUK_NM');",
                            "",
                            "    if (!selectedCustCd) {",
                            "        Ext.Msg.alert('오류', '거래처 코드가 없습니다.');",
                            "        return;",
                            "    }",
                            "",
                            "    // 👉 순번 밀기",
                            "    store.each(r => {",
                            "        if (r.get('cusCd') === cusCd && Number(r.get('subSunbun')) >= baseIndex) {",
                            "            // 기존 순번을 백업 (한 번만 저장)",
                            "//             if (!r.get('oldSubSunbun')) {",
                            "//                 r.set('oldSubSunbun', r.get('subSunbun'));",
                            "//             }",
                            "            r.set('subSunbun', Number(r.get('subSunbun')) + 1);",
                            "        }",
                            "    });",
                            "",
                            "    // 👉 새 레코드 생성",
                            "    const newRecord = store.model.create({",
                            "        userCetCd: dream.util.Common.LOGIN_USER_CET_CD,",
                            "        cusCd: cusCd,",
                            "        subSunbun: baseIndex,",
                            "        custCd: selectedCustCd,",
                            "        custGb: selectedCustGb,",
                            "        custNm: selectedCustNm,",
                            "        jiyukNm: selectedjiyukNm,",
                            "        subWorkGb: '1',",
                            "        subOrderGb: '01',",
                            "        subChulGb: '',",
                            "        insertId: dream.util.Common.LOGIN_USER,",
                            "        updateId: dream.util.Common.LOGIN_USER",
                            "    });",
                            "",
                            "    // 👉 추가 및 정렬",
                            "    store.add(newRecord);",
                            "    store.sort('subSunbun', 'ASC');",
                            "",
                            "    // 👉 선택 유지",
                            "    Ext.defer(() => {",
                            "        const matched = store.findRecord('subSunbun', baseIndex, 0, false, true);",
                            "        if (matched) {",
                            "            grid.getSelectionModel().select(matched);",
                            "        }",
                            "    }, 50);",
                            "});",
                            "",
                            "popup.show();",
                            ""
                        ],
                        "name": "click",
                        "scope": "me"
                    },
                    "configAlternates": {
                        "fn": "string",
                        "implHandler": "code",
                        "name": "string",
                        "scope": "string"
                    },
                    "name": "onButtonClick_add_button",
                    "designerId": "d3393f46-98fe-4cb2-a699-249c991176e5"
                }
            ]
        },
        {
            "type": "Ext.button.Button",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "layout|x": 220,
                "layout|y": 140,
                "reference": "delete_button",
                "text": "자료삭제",
                "width": 60
            },
            "configAlternates": {
                "layout|x": "number",
                "layout|y": "number",
                "text": "string",
                "width": "auto",
                "reference": "string"
            },
            "name": "MyButton19",
            "designerId": "e61c5afb-f8f2-46cd-849a-3d49926caa46",
            "cn": [
                {
                    "type": "viewcontrollereventbinding",
                    "reference": {
                        "name": "listeners",
                        "type": "array"
                    },
                    "codeClass": null,
                    "userConfig": {
                        "fn": "onButtonClick_delete_button",
                        "implHandler": [
                            "const grid = this.lookupReference('list_grid');",
                            "const store = grid.getStore();",
                            "const selection = grid.getSelectionModel().getSelection()[0];",
                            "",
                            "if (!selection) {",
                            "    Ext.Msg.alert('오류', '삭제할 행을 선택하세요.');",
                            "    return;",
                            "}",
                            "",
                            "// 기준 값 추출",
                            "const deletedSunbun = Number(selection.get('subSunbun'));",
                            "const deletedCusCd = selection.get('cusCd');",
                            "",
                            "// 1. 삭제 대상 로우 제거",
                            "store.remove(selection);",
                            "",
                            "// 2. 삭제된 순번 이후 항목들의 순번을 -1로 조정",
                            "store.each(record => {",
                            "    const currentSunbun = Number(record.get('subSunbun'));",
                            "    if (record.get('cusCd') === deletedCusCd && currentSunbun > deletedSunbun) {",
                            "        record.set('subSunbun', currentSunbun - 1);",
                            "    }",
                            "});",
                            "",
                            "// 3. 정렬",
                            "store.sort('subSunbun', 'ASC');",
                            "",
                            "// 4. 다음 항목 자동 선택",
                            "Ext.defer(() => {",
                            "    const nextRecord = store.findRecord('subSunbun', deletedSunbun, 0, false, true);",
                            "    if (nextRecord) {",
                            "        grid.getSelectionModel().select(nextRecord);",
                            "    } else if (store.getCount() > 0) {",
                            "        // 다음 항목이 없다면 마지막 항목 선택",
                            "        grid.getSelectionModel().select(store.getCount() - 1);",
                            "    }",
                            "}, 50);"
                        ],
                        "name": "click",
                        "scope": "me"
                    },
                    "configAlternates": {
                        "fn": "string",
                        "implHandler": "code",
                        "name": "string",
                        "scope": "string"
                    },
                    "name": "onButtonClick_delete_button",
                    "designerId": "eae3acb3-6644-4d5d-a408-91d069586f92"
                }
            ]
        },
        {
            "type": "Ext.button.Button",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "layout|x": 290,
                "layout|y": 140,
                "reference": "save_button",
                "text": "자료저장",
                "width": 60
            },
            "configAlternates": {
                "layout|x": "number",
                "layout|y": "number",
                "text": "string",
                "width": "auto",
                "reference": "string"
            },
            "name": "MyButton21",
            "designerId": "85fb14d3-ed48-4d44-ae86-a8504942e479",
            "cn": [
                {
                    "type": "viewcontrollereventbinding",
                    "reference": {
                        "name": "listeners",
                        "type": "array"
                    },
                    "codeClass": null,
                    "userConfig": {
                        "fn": "onButtonClick_save_button",
                        "implHandler": [
                            "const grid = this.lookupReference('list_grid');",
                            "const store = grid.getStore();",
                            "",
                            "// 신규 데이터",
                            "const newRecords = store.getNewRecords().map(r => {",
                            "    const data = r.getData();",
                            "    return data;",
                            "});",
                            "",
                            "// 수정된 데이터: oldSubSunbun 고려",
                            "const updatedRecords = store.getUpdatedRecords().map(r => {",
                            "    const data = r.getData();",
                            "    // oldSubSunbun이 없으면 원래 subSunbun을 복사해줌",
                            "//     if (!data.oldSubSunbun) {",
                            "//         data.oldSubSunbun = data.subSunbun;",
                            "//     }",
                            "    return data;",
                            "});",
                            "",
                            "// 삭제된 데이터",
                            "const removedRecords = store.getRemovedRecords().map(r => r.getData());",
                            "",
                            "const payload = {",
                            "    insertList: newRecords,",
                            "    updateList: updatedRecords,",
                            "    deleteList: removedRecords",
                            "};",
                            "",
                            "Ext.Msg.confirm('확인', '저장하시겠습니까?', function(btn) {",
                            "    if (btn !== 'yes') return;",
                            "",
                            "    Ext.Ajax.request({",
                            "        url: dream.util.Common.BASE_URL + '/tbas/1011/save',",
                            "        method: 'POST',",
                            "        jsonData: payload,",
                            "        success: function(response) {",
                            "            const res = Ext.decode(response.responseText);",
                            "            if (res.success) {",
                            "                Ext.Msg.alert('알림', '저장 완료되었습니다.');",
                            "                store.reload();",
                            "            } else {",
                            "                Ext.Msg.alert('실패', res.message || '저장 중 오류가 발생했습니다.');",
                            "            }",
                            "        },",
                            "        failure: function(response) {",
                            "            Ext.Msg.alert('오류', '서버 통신 오류 또는 저장 실패');",
                            "        }",
                            "    });",
                            "});"
                        ],
                        "name": "click",
                        "scope": "me"
                    },
                    "configAlternates": {
                        "fn": "string",
                        "implHandler": "code",
                        "name": "string",
                        "scope": "string"
                    },
                    "name": "onButtonClick_save_button",
                    "designerId": "fdc848fd-1824-484b-8050-a5bdea2fe50c"
                }
            ]
        },
        {
            "type": "Ext.button.Button",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "layout|x": 750,
                "layout|y": 80,
                "text": "엑셀",
                "width": 60
            },
            "configAlternates": {
                "layout|x": "number",
                "layout|y": "number",
                "text": "string",
                "width": "auto"
            },
            "name": "MyButton22",
            "designerId": "9e3336f0-01ae-4ffe-addb-8aa12cad19b4"
        },
        {
            "type": "Ext.button.Button",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "layout|x": 750,
                "layout|y": 140,
                "reference": "sunbun_search_button",
                "text": "순번찾기",
                "width": 60
            },
            "configAlternates": {
                "layout|x": "number",
                "layout|y": "number",
                "text": "string",
                "width": "auto",
                "reference": "string"
            },
            "name": "MyButton30",
            "designerId": "502e4a95-897c-4b90-bd64-e71362871798",
            "cn": [
                {
                    "type": "viewcontrollereventbinding",
                    "reference": {
                        "name": "listeners",
                        "type": "array"
                    },
                    "codeClass": null,
                    "userConfig": {
                        "fn": "onButtonClick_sunbun_search_button",
                        "implHandler": [
                            "let searchMatches = [];",
                            "let searchIndex = 0;",
                            "",
                            "",
                            "const grid = this.lookupReference('list_grid');",
                            "const store = grid.getStore();",
                            "const keyword = this.lookupReference('search_cusNm').getValue();",
                            "",
                            "if (!keyword) {",
                            "    Ext.Msg.alert('알림', '검색할 키워드를 입력하세요.');",
                            "    return;",
                            "}",
                            "",
                            "// 첫 검색이거나 키워드가 변경되었을 때 일치 항목을 다시 찾음",
                            "if (!this.lastKeyword || this.lastKeyword !== keyword) {",
                            "    this.searchMatches = [];",
                            "",
                            "    store.each((record, index) => {",
                            "        const name = record.get('custNm') || '';",
                            "        if (name.includes(keyword)) {",
                            "            this.searchMatches.push(index);",
                            "        }",
                            "    });",
                            "",
                            "    this.searchIndex = 0;",
                            "    this.lastKeyword = keyword;",
                            "}",
                            "",
                            "if (this.searchMatches.length === 0) {",
                            "    Ext.Msg.alert('결과 없음', `'${keyword}'이(가) 포함된 거래처를 찾을 수 없습니다.`);",
                            "    return;",
                            "}",
                            "",
                            "// 현재 인덱스에 해당하는 레코드 선택 및 포커스",
                            "const matchedIndex = this.searchMatches[this.searchIndex];",
                            "const record = store.getAt(matchedIndex);",
                            "",
                            "const rowIndex = matchedIndex;",
                            "const columnIndex = grid.getColumnManager().getHeaderIndex('subSunbun');",
                            "",
                            "grid.getSelectionModel().select(record); // 행 선택",
                            "",
                            "grid.getView().focusCell({",
                            "    row: rowIndex,",
                            "    column: columnIndex",
                            "});",
                            "",
                            "// 다음 검색 위치로 이동 (순환)",
                            "this.searchIndex = (this.searchIndex + 1) % this.searchMatches.length;"
                        ],
                        "name": "click",
                        "scope": "me"
                    },
                    "configAlternates": {
                        "fn": "string",
                        "implHandler": "code",
                        "name": "string",
                        "scope": "string"
                    },
                    "name": "onButtonClick_sunbun_search_button",
                    "designerId": "d7e8575a-0435-4280-a55d-e2dd68f55969"
                }
            ]
        },
        {
            "type": "viewcontrollereventbinding",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "onPanelBeforeRender",
                "implHandler": [
                    "dream.util.Common.loadCode('168');",
                    "dream.util.Common.loadCode('1003');",
                    "dream.util.Common.loadCode('1022');",
                    ""
                ],
                "name": "beforerender",
                "scope": "me"
            },
            "configAlternates": {
                "fn": "string",
                "implHandler": "code",
                "name": "string",
                "scope": "string"
            },
            "name": "onPanelBeforeRender",
            "designerId": "2243d896-1b84-4054-ad9c-06ed54b8134c"
        }
    ]
}
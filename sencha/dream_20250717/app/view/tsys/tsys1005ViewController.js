/*
 * File: app/view/tsys/tsys1005ViewController.js
 *
 * This file was generated by Sencha Architect version 4.3.7.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 7.9.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 7.9.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('dream.view.tsys.tsys1005ViewController', {
    extend: 'Ext.app.ViewController',
    alias: 'controller.tsys.tsys1005',

    onGridpanelAfterRender_tsys1005_codegroupgrid: function(component, eOpts) {
        const store = component.getStore();

        // 1. proxy의 URL을 동적으로 설정
        store.getProxy().setUrl(dream.util.Common.BASE_URL+'/tsys/code/grouplist');

        // 2. 필요 시 추가 파라미터 설정 (예: userCetCd 등)
        store.getProxy().setExtraParams({
            userCetCd: dream.util.Common.LOGIN_USER_CET_CD
        });


        // 3. 스토어 리로드
        store.reload();





        // Ext.Ajax.request({
        //     url: dream.util.Common.BASE_URL+'/tsys/code/grouplist',
        //     method: 'POST',

        //     jsonData: {
        //         userCetCd: dream.util.Common.LOGIN_USER_CET_CD
        //     },
        //     success: function(response) {
        //         const json = Ext.decode(response.responseText);
        //         store.setData(json);
        //     },
        //     failure: function(response) {
        //         Ext.Msg.alert('에러', '데이터를 불러오는 데 실패했습니다.');
        //     }
        // });
    },

    onGridpanelItemClick_tsys1005_codeGroupGrid: function(dataview, record, item, index, e, eOpts) {
        // const view = this.getView();
        // const form = this.lookupReference('tsys1005_code_group_form');
        // const form2 = this.lookupReference('tsys1005_code_detail_form');
        // if (form) {
        //     form.loadRecord(record);  // 레코드를 폼에 로딩
        // }

        // if (form2) form2.reset();


        // const codeCd = record.data.codeCd;
        // view.selectedGroup = codeCd;

        // const grid = view.lookupReference('codeListGrid');
        // const store = grid.getStore();

        // Ext.Ajax.request({
        //     url: dream.util.Common.BASE_URL+'/tsys/code/list/'+codeCd,
        //     method: 'GET',

        //     success: function(response) {
        //         const json = Ext.decode(response.responseText);
        //         store.setData(json);
        //     },
        //     failure: function(response) {
        //         Ext.Msg.alert('에러', '데이터를 불러오는 데 실패했습니다.');
        //     }
        // });

    },

    onGridpanelSelectionChange_tsys1005_codegroupgrid: function(model, selected, eOpts) {
        if (!selected || selected.length === 0) {
            console.warn('선택된 레코드가 없습니다.');
            return;
        }

        const view = this.getView();
        const form = this.lookupReference('tsys1005_code_group_form');
        const form2 = this.lookupReference('tsys1005_code_detail_form');
        const code_cd_field = form.down('[name=codeCd]');

        if (form) {
            form.loadRecord(selected[0]);  // 레코드를 폼에 로딩
            code_cd_field.setReadOnly(true);

        }

        if (form2) form2.reset();


        const codeCd = selected[0].data.codeCd;
        view.selectedGroup = codeCd;

        const grid = view.lookupReference('codeListGrid');
        const store = grid.getStore();

        Ext.Ajax.request({
            url: dream.util.Common.BASE_URL+'/tsys/code/list/'+codeCd,
            method: 'GET',

            success: function(response) {
                const json = Ext.decode(response.responseText);
                store.setData(json);
            },
            failure: function(response) {
                Ext.Msg.alert('에러', '데이터를 불러오는 데 실패했습니다.');
            }
        });
    },

    onGridpanelItemClick_tsys1005_code_list_gird: function(dataview, record, item, index, e, eOpts) {
        //         const form = this.lookupReference('tsys1005_code_detail_form');
        //         if (form) {
        //             form.loadRecord(record);  // 레코드를 폼에 로딩
        //         }
    },

    onGridpanelSelectionChange_tsys1005_codelistgrid: function(model, selected, eOpts) {
        if (!selected || selected.length === 0) {
            console.warn('선택된 레코드가 없습니다.');
            return;
        }

        const form = this.lookupReference('tsys1005_code_detail_form');
        let record = selected[0];

        if (form) {
            form.loadRecord(record);  // 레코드를 폼에 로딩
        }
    },

    onTsys1005_group_insertClick: function(button, e, eOpts) {
        const view = this.getView();
        const form = view.lookupReference('tsys1005_code_group_form');
        if (form) {
            form.reset();

            // useYn 필드 값 설정
            const useYnField = form.down('[name=useYn]');
            if (useYnField) {
                useYnField.setValue('1');
            }

            // codeCd 필드에 포커스 주기 (reset 이후에 호출해야 함)
            const codeCdField = form.down('[name=codeCd]');
            if (codeCdField) {
                codeCdField.setReadOnly(false);
                codeCdField.focus(true, 200); // delay 200ms (선택사항)
            }
        }

    },

    onTsys1005_group_saveClick: function(button, e, eOpts) {
        const view = this.getView();
        const form = view.lookupReference('tsys1005_code_group_form');
        const grid = view.lookupReference('codeGroupGrid');


        // if (!form.isValid()) {
        //     Ext.Msg.alert('알림', '필수 항목을 입력하세요.');
        //     return;
        // }

        const values = form.getValues();
        values.insertId = dream.util.Common.LOGIN_USER_ID;
        values.userCetCd = dream.util.Common.LOGIN_USER_CET_CD;

        Ext.Ajax.request({
            url: dream.util.Common.BASE_URL + '/tsys/code/groupinsert',
            method: 'POST',
            jsonData: values,
            success: function () {
                Ext.Msg.alert('성공', '그룹이 등록되었습니다.');

                grid.getStore().reload();
            },
            failure: function () {
                Ext.Msg.alert('실패', '그룹 등록에 실패했습니다.');
            }



        });






    },

    onButtonClick_tsys1005_group_keyword: function(button, e, eOpts) {
        const view = this.getView();
        const grid = view.lookupReference('codeGroupGrid');
        const store = grid.getStore();
        const keywordField = Ext.getCmp('tsys1005_group_keyword');
        const keyword = keywordField ? keywordField.getValue() : '';

        store.getProxy().setExtraParams({
            userCetCd: dream.util.Common.LOGIN_USER_CET_CD,
            groupKeyword: keyword
        });


        store.reload();

    },

    onTsys1005_group_deleteClick: function(button, e, eOpts) {
        const view = this.getView();
        const grid = this.lookupReference('codeGroupGrid');
        const record = grid.getSelectionModel().getSelection()[0];
        const form = view.lookupReference('tsys1005_code_group_form');

        if (!record) {
            Ext.Msg.alert('알림', '삭제할 항목을 선택하세요.');
            return;
        }

        Ext.Msg.confirm('확인', '선택한 그룹코드를 삭제하시겠습니까?', function (btn) {
            if (btn === 'yes') {
                Ext.Ajax.request({
                    url: dream.util.Common.BASE_URL + '/tsys/code/groupdelete',
                    method: 'DELETE',
                    jsonData: {
                        userCetCd: dream.util.Common.LOGIN_USER_CET_CD,
                        groupCd: record.get('groupCd'),
                        codeCd: record.get('codeCd')
                    },
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    success: function (response) {
                        Ext.Msg.alert('성공', '삭제되었습니다.');
                        grid.getStore().reload();

                        if (form) {
                            form.reset();
                        }

                    },
                    failure: function (response) {
                        Ext.Msg.alert('오류', '삭제에 실패했습니다.');
                    }
                });
            }
        });
    },

    onTsys1005_code_deleteClick: function(button, e, eOpts) {
        const view = this.getView();
        const grid = view.lookupReference('codeListGrid');
        const store = grid.getStore();
        const form = view.lookupReference('tsys1005_code_detail_form');
        const record = grid.getSelection()[0];

        if (!record) {
            Ext.Msg.alert('알림', '삭제할 항목을 선택하세요.');
            return;
        }


        Ext.Msg.confirm('확인', '선택한 코드를 삭제하시겠습니까?', function(btn) {
            if (btn === 'yes') {
                Ext.Ajax.request({
                    url: dream.util.Common.BASE_URL + '/tsys/code/codedelete',
                    method: 'POST',
                    jsonData: {
                        groupCd: record.get('groupCd'),
                        codeCd: record.get('codeCd'),
                        userCetCd: dream.util.Common.LOGIN_USER_CET_CD
                    },
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    success: function(response) {
                        Ext.Msg.alert('성공', '삭제되었습니다.');
                        if (grid) {
                            store.getProxy().setUrl(dream.util.Common.BASE_URL+'/tsys/code/list/'+view.selectedGroup);
                            store.reload();
                        }
                        form.reset();
                    },
                    failure: function(response) {
                        Ext.Msg.alert('실패', '삭제에 실패했습니다.');
                    }
                });
            }
        });

    },

    onTsys1005_code_insertClick: function(button, e, eOpts) {
        const view = this.getView();
        const form = view.lookupReference('tsys1005_code_detail_form');
        if (form) {
            form.reset();

            // useYn 필드 값 설정
            const useYnField = form.down('[name=useYn]');
            if (useYnField) {
                useYnField.setValue('1');
            }

            // codeCd 필드에 포커스 주기 (reset 이후에 호출해야 함)
            const codeCdField = form.down('[name=codeCd]');
            if (codeCdField) {
                codeCdField.focus(true, 200); // delay 200ms (선택사항)
            }
        }
    },

    onTsys1005_code_saveClick: function(button, e, eOpts) {
        const view = this.getView();
        const form = view.lookupReference('tsys1005_code_detail_form');
        const grid = view.lookupReference('codeListGrid');
        const store = grid.getStore();

        // if (!form.isValid()) {
        //     Ext.Msg.alert('알림', '필수값을 입력하세요.');
        //     return;
        // }

        const values = form.getValues();
        values.insertId = dream.util.Common.LOGIN_USER;
        values.userCetCd = dream.util.Common.LOGIN_USER_CET_CD;
        values.groupCd = view.selectedGroup;

        Ext.Ajax.request({
            url: dream.util.Common.BASE_URL + '/tsys/code/codeinsert',
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            jsonData: values,
            success: function (res) {
                Ext.Msg.alert('성공', '등록되었습니다.');

                if (grid) {
                    store.getProxy().setUrl(dream.util.Common.BASE_URL+'/tsys/code/list/'+view.selectedGroup);
                    store.reload();
                }
            },
            failure: function (res) {
                Ext.Msg.alert('실패', '등록 실패: ' + res.responseText);
            }
        });




    },

    onTsys1005_group_keywordAfterRender: function(component, eOpts) {
        component.on('specialkey', function(component, e) {
            if (e.getKey() === e.ENTER) {
                const button = Ext.getCmp('tsys1005_search_button');
                if (button) {
                    button.fireEvent('click', button);
                }
            }
        });
    },

    onComboboxAfterRender_tsys1005_group_useyn: function(component, eOpts) {
        dream.util.Common.setFlagCombo(component,"사용","","1");
    },

    onComboboxAfterRender_codelistform_useyn: function(component, eOpts) {
        dream.util.Common.setFlagCombo(component,"사용","","1");
    },

    onTsys1005_group_updateClick: function(button, e, eOpts) {
        const view = this.getView();
        const form = view.lookupReference('tsys1005_code_group_form');
        const grid = view.lookupReference('codeGroupGrid');
        const values = form.getValues();
        const codecd_field = form.down('[name=codeCd]');

        values.updateId = dream.util.Common.LOGIN_USER;
        values.userCetCd = dream.util.Common.LOGIN_USER_CET_CD;

        Ext.Ajax.request({
            url: dream.util.Common.BASE_URL + '/tsys/code/groupupdate',
            method: 'POST',
            jsonData: values,
            success: function () {
                Ext.Msg.alert('성공', '그룹이 수정되었습니다.');

                grid.getStore().reload();
            },
            failure: function () {
                Ext.Msg.alert('실패', '그룹 수정에 실패했습니다.');
            }



        });




    },

    onTsys1005_code_updateClick: function(button, e, eOpts) {
        const view = this.getView();
        const form = view.lookupReference('tsys1005_code_detail_form');
        const grid = view.lookupReference('codeListGrid');
        const store = grid.getStore();

        // if (!form.isValid()) {
        //     Ext.Msg.alert('알림', '필수값을 입력하세요.');
        //     return;
        // }

        const values = form.getValues();
        values.updateId = dream.util.Common.LOGIN_USER;
        values.userCetCd = dream.util.Common.LOGIN_USER_CET_CD;
        values.groupCd = view.selectedGroup;

        Ext.Ajax.request({
            url: dream.util.Common.BASE_URL + '/tsys/code/codeupdate',
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            jsonData: values,
            success: function (res) {
                Ext.Msg.alert('성공', '수정되었습니다.');

                if (grid) {
                    store.getProxy().setUrl(dream.util.Common.BASE_URL+'/tsys/code/list/'+view.selectedGroup);
                    store.reload();
                }
            },
            failure: function (res) {
                Ext.Msg.alert('실패', '수정 실패: ' + res.responseText);
            }
        });

    }

});

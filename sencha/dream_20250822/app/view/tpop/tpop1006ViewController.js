/*
 * File: app/view/tpop/tpop1006ViewController.js
 *
 * This file was generated by Sencha Architect version 4.3.7.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 7.9.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 7.9.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('dream.view.tpop.tpop1006ViewController', {
    extend: 'Ext.app.ViewController',
    alias: 'controller.tpop.tpop1006',

    onGridpanelAfterRender_search_grid: function(component, eOpts) {
        const store = component.getStore();

        // 1. proxy의 URL을 동적으로 설정
        store.getProxy().setUrl(dream.util.Common.BASE_URL+'/tpop/1006/list');

        // 2. 필요 시 추가 파라미터 설정 (예: userCetCd 등)
        store.getProxy().setExtraParams({
            userCetCd: dream.util.Common.LOGIN_USER_CET_CD
        });


    },

    onGridpanelItemDblClick: function(dataview, record, item, index, e, eOpts) {
        const view = this.getView();
        view.fireEvent('selectUser', view, record);
        view.close();
    },

    onTextfieldAfterRender_keyword: function(component, eOpts) {
        const button = this.lookupReference('search_button');
        component.on('specialkey', function(component, e) {
            if (e.getKey() === e.ENTER) {
                if (button) {
                    button.fireEvent('click', button);
                }
            }
        });
    },

    onComboboxAfterRender_use_yn: function(component, eOpts) {
        dream.util.Common.setFlagCombo(component,"사용","전체","1");
    },

    onButtonClick_search_button: function(button, e, eOpts) {
        const view = this.getView();
        const grid = Ext.ComponentQuery.query('grid[reference=search_grid]')[0];
        const store = grid.getStore();
        const chulpan_cd = view.lookupReference('chulpan_code').getValue();
        const use_yn = view.lookupReference('use_yn').getValue();
        const keyword = view.lookupReference('keyword').getValue();

        store.getProxy().setExtraParams({
            userCetCd: dream.util.Common.LOGIN_USER_CET_CD,
            chulpanCd: chulpan_cd,
            useYn: use_yn,
            keyword: keyword
        });

        store.reload();
    },

    onButtonClick_confirm_button: function(button, e, eOpts) {
        const view = this.getView();
        const grid = view.lookupReference('search_grid');
        const selection = grid.getSelectionModel().getSelection();

        if (selection.length === 0) {
            Ext.Msg.alert('알림', '데이터를 선택해주세요.');
            return;
        }

        const record = selection[0];


        view.fireEvent('selectUser', view, record);

        view.close();
    },

    onButtonClick_cancel_button: function(button, e, eOpts) {
        button.up('window').close();
    },

    onButtonClick_chulpan_search_button: function(button, e, eOpts) {

    }

});

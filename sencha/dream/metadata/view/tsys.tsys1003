{
    "type": "Ext.panel.Panel",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "designer|snapToGrid": 10,
        "designer|userAlias": "tsys.tsys1003",
        "designer|userClassName": "tsys.tsys1003",
        "height": 850,
        "layout": "absolute",
        "title": "",
        "width": 1600
    },
    "configAlternates": {
        "designer|snapToGrid": "number",
        "designer|userAlias": "string",
        "designer|userClassName": "string",
        "height": "auto",
        "layout": "string",
        "title": "string",
        "width": "auto"
    },
    "name": "MyPanel",
    "designerId": "4fb46f98-b937-4015-9af7-e079c0aa3252",
    "viewControllerInstanceId": "0573ab37-4164-42bc-8d67-f989d7fe0da3",
    "viewModelInstanceId": "cccda2fe-b772-4fff-93fd-ae12a2a5a603",
    "cn": [
        {
            "type": "Ext.grid.Panel",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "height": 550,
                "layout|x": 0,
                "layout|y": 80,
                "reference": "tsys1003_group_grid",
                "store": "tsys.TmsGroupMStore",
                "title": "사용자 그룹",
                "width": 400
            },
            "configAlternates": {
                "height": "auto",
                "layout|x": "number",
                "layout|y": "number",
                "title": "string",
                "width": "auto",
                "reference": "string",
                "store": "store"
            },
            "name": "MyGridPanel1",
            "designerId": "45cd3321-7a24-4ac7-8da4-576ffe9b14c0",
            "cn": [
                {
                    "type": "Ext.grid.column.RowNumberer",
                    "reference": {
                        "name": "columns",
                        "type": "array"
                    },
                    "codeClass": null,
                    "userConfig": {
                        "text": "NO",
                        "width": 44
                    },
                    "configAlternates": {
                        "text": "string",
                        "width": "number"
                    },
                    "name": "MyRowNumberer",
                    "designerId": "2ecee635-6d4f-4ab9-95a9-703c4226e6c7"
                },
                {
                    "type": "Ext.grid.column.Column",
                    "reference": {
                        "name": "columns",
                        "type": "array"
                    },
                    "codeClass": null,
                    "userConfig": {
                        "dataIndex": "groupCd",
                        "text": "그룹코드",
                        "width": 69
                    },
                    "configAlternates": {
                        "text": "string",
                        "dataIndex": "datafield",
                        "width": "auto"
                    },
                    "name": "MyColumn5",
                    "designerId": "c0b74cb9-4f32-4e8b-9cb0-b0a8830f2a54"
                },
                {
                    "type": "Ext.grid.column.Column",
                    "reference": {
                        "name": "columns",
                        "type": "array"
                    },
                    "codeClass": null,
                    "userConfig": {
                        "dataIndex": "groupNm",
                        "text": "그룹명"
                    },
                    "configAlternates": {
                        "text": "string",
                        "dataIndex": "datafield"
                    },
                    "name": "MyColumn4",
                    "designerId": "23a590ec-71c2-4060-a685-af09810bc550"
                },
                {
                    "type": "Ext.grid.column.Column",
                    "reference": {
                        "name": "columns",
                        "type": "array"
                    },
                    "codeClass": null,
                    "userConfig": {
                        "dataIndex": "bigo",
                        "text": "비고사항"
                    },
                    "configAlternates": {
                        "text": "string",
                        "dataIndex": "datafield"
                    },
                    "name": "MyColumn3",
                    "designerId": "8aba24dc-205c-447a-96c5-dfb8fb22fadf"
                },
                {
                    "type": "Ext.grid.column.Column",
                    "reference": {
                        "name": "columns",
                        "type": "array"
                    },
                    "codeClass": null,
                    "userConfig": {
                        "dataIndex": "useYn",
                        "text": "사용여부",
                        "width": 64
                    },
                    "configAlternates": {
                        "text": "string",
                        "dataIndex": "datafield",
                        "width": "auto"
                    },
                    "name": "MyColumn1",
                    "designerId": "27d7fd36-6dff-4782-a2ab-11ba16ef8f8a",
                    "cn": [
                        {
                            "type": "fixedfunction",
                            "reference": {
                                "name": "items",
                                "type": "array"
                            },
                            "codeClass": null,
                            "userConfig": {
                                "designer|params": [
                                    "value",
                                    "metaData",
                                    "record",
                                    "rowIndex",
                                    "colIndex",
                                    "store",
                                    "view"
                                ],
                                "fn": "renderer",
                                "implHandler": [
                                    "return dream.util.Common.getFlagCodeName('사용', value);"
                                ]
                            },
                            "configAlternates": {
                                "designer|params": "typedarray",
                                "fn": "string",
                                "implHandler": "code"
                            },
                            "name": "renderer",
                            "designerId": "862a3f8a-a310-400c-be51-87a07585f421"
                        }
                    ]
                },
                {
                    "type": "viewcontrollereventbinding",
                    "reference": {
                        "name": "listeners",
                        "type": "array"
                    },
                    "codeClass": null,
                    "userConfig": {
                        "fn": "onGridpanelAfterRender_tsys1003_group_grid",
                        "implHandler": [
                            "const grid = Ext.ComponentQuery.query('grid[reference=tsys1003_group_grid]')[0];",
                            "const store = grid.getStore();",
                            "",
                            "store.getProxy().setUrl(dream.util.Common.BASE_URL+'/tsys/group/grouplist');",
                            "",
                            "store.getProxy().setExtraParams({",
                            "    userCetCd: dream.util.Common.LOGIN_USER_CET_CD",
                            "});",
                            "",
                            "store.reload();"
                        ],
                        "name": "afterrender",
                        "scope": "me"
                    },
                    "configAlternates": {
                        "fn": "string",
                        "implHandler": "code",
                        "name": "string",
                        "scope": "string"
                    },
                    "name": "onGridpanelAfterRender_tsys1003_group_grid",
                    "designerId": "62c7029f-6cdb-417d-b28f-dbfc7da266b8"
                },
                {
                    "type": "viewcontrollereventbinding",
                    "reference": {
                        "name": "listeners",
                        "type": "array"
                    },
                    "codeClass": null,
                    "userConfig": {
                        "fn": "onGridpanelSelectionChange",
                        "implHandler": [
                            "if (!selected.length) return;",
                            "",
                            "// if (!selected || selected.length === 0) {",
                            "//     console.warn('선택된 레코드가 없습니다.');",
                            "//     return;",
                            "// }",
                            "",
                            "const view = this.getView();",
                            "const form = view.lookupReference('tsys1003_group_form');",
                            "const code_cd_field = form.down('[name=groupCd]');",
                            "",
                            "if (form) {",
                            "    form.loadRecord(selected[0]);",
                            "    code_cd_field.setReadOnly(true);",
                            "}",
                            "",
                            "",
                            "",
                            "// 메뉴트리에 선택된 그룹의 메뉴만 표시하기",
                            "",
                            "const groupCd = selected[0].get('groupCd'); // D03 등",
                            "const userCetCd = dream.util.Common.LOGIN_USER_CET_CD;",
                            "const tree = view.lookupReference('tsys1003_tree');",
                            "",
                            "// 전체 체크 초기화",
                            "tree.getRootNode().cascadeBy(function(node) {",
                            "    node.set('checked', false);",
                            "});",
                            "",
                            "// 서버에서 체크된 메뉴 ID 불러오기",
                            "Ext.Ajax.request({",
                            "    url: dream.util.Common.BASE_URL + '/tsys/group/' + groupCd,",
                            "    method: 'GET',",
                            "    params: {",
                            "        userCetCd: userCetCd,",
                            "        groupCd: groupCd",
                            "    },",
                            "    success: function(res) {",
                            "        const checkedMenuIds = Ext.decode(res.responseText); // ['TBAS1001', 'OINA2002', ...]",
                            "        const store = tree.getStore();",
                            "",
                            "        store.getRoot().cascadeBy(function(node) {",
                            "            //console.log('NODE:', node.get('menuId'), '✔', checkedMenuIds.includes(node.get('menuId')));",
                            "            if (checkedMenuIds.includes(node.get('menuId'))) {",
                            "                node.set('checked', true);",
                            "            }",
                            "        });",
                            "    },",
                            "    failure: function() {",
                            "        Ext.Msg.alert('오류', '메뉴 권한 정보를 불러오는 데 실패했습니다.');",
                            "    }",
                            "});",
                            "",
                            "",
                            "",
                            "// 메뉴그룹에 속한 그룹유저 가져오기",
                            "",
                            "const group_user_grid = Ext.ComponentQuery.query('grid[reference=tsys1003_group_user_grid]')[0];",
                            "const group_user_store = group_user_grid.getStore();",
                            "",
                            "group_user_store.getProxy().setExtraParams({",
                            "    userCetCd: dream.util.Common.LOGIN_USER_CET_CD,",
                            "    groupCd: groupCd",
                            "});",
                            "",
                            "group_user_store.reload();",
                            "",
                            "",
                            ""
                        ],
                        "name": "selectionchange",
                        "scope": "me"
                    },
                    "configAlternates": {
                        "fn": "string",
                        "implHandler": "code",
                        "name": "string",
                        "scope": "string"
                    },
                    "name": "onGridpanelSelectionChange",
                    "designerId": "9acb956a-5236-4082-8b45-392320815ca7"
                }
            ]
        },
        {
            "type": "Ext.button.Button",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "layout|x": 240,
                "layout|y": 50,
                "reference": "add_button",
                "text": "추가"
            },
            "configAlternates": {
                "layout|x": "number",
                "layout|y": "number",
                "text": "string",
                "id": "string",
                "reference": "string"
            },
            "name": "MyButton15",
            "designerId": "8bef0546-11a8-4922-845c-2bc5d753d1f8",
            "cn": [
                {
                    "type": "viewcontrollereventbinding",
                    "reference": {
                        "name": "listeners",
                        "type": "array"
                    },
                    "codeClass": null,
                    "userConfig": {
                        "fn": "onTsys1003_group_pre_buttonClick",
                        "implHandler": [
                            "const form = this.lookupReference('tsys1003_group_form');",
                            "if (form) {",
                            "    form.reset();",
                            "    const formField = form.down('[name=groupCd]');",
                            "    const useynField = form.down('[name=useYn]');",
                            "    if (formField) {",
                            "        formField.setReadOnly(false);",
                            "        formField.focus(false, 100);",
                            "    }",
                            "    if (useynField) {",
                            "        useynField.setValue('1');",
                            "    }",
                            "}",
                            "",
                            ""
                        ],
                        "name": "click",
                        "scope": "me"
                    },
                    "configAlternates": {
                        "fn": "string",
                        "implHandler": "code",
                        "name": "string",
                        "scope": "string"
                    },
                    "name": "onTsys1003_group_pre_buttonClick",
                    "designerId": "f836bfa2-7fbd-458a-80c5-84774a20b66a"
                }
            ]
        },
        {
            "type": "Ext.button.Button",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "layout|x": 280,
                "layout|y": 50,
                "reference": "insert_button",
                "text": "등록"
            },
            "configAlternates": {
                "layout|x": "number",
                "layout|y": "number",
                "text": "string",
                "id": "string",
                "reference": "string"
            },
            "name": "MyButton3",
            "designerId": "53147ab4-90d6-473b-99cf-0cbe570649b1",
            "cn": [
                {
                    "type": "viewcontrollereventbinding",
                    "reference": {
                        "name": "listeners",
                        "type": "array"
                    },
                    "codeClass": null,
                    "userConfig": {
                        "fn": "onTsys1003_group_add_buttonClick",
                        "implHandler": [
                            "const form = this.lookupReference('tsys1003_group_form');",
                            "const groupGrid = this.lookupReference('tsys1003_group_grid');",
                            "",
                            "if (!form.isValid()) {",
                            "    Ext.Msg.alert('알림', '필수 항목을 입력해주세요.');",
                            "    return;",
                            "}",
                            "",
                            "const values = form.getValues();",
                            "values.userCetCd = dream.util.Common.LOGIN_USER_CET_CD;",
                            "values.insertId = dream.util.Common.LOGIN_USER;",
                            "",
                            "Ext.Msg.confirm('확인', `그룹 [${values.groupNm}]을 추가하시겠습니까?`, function(btn) {",
                            "    if (btn === 'yes') {",
                            "        Ext.Ajax.request({",
                            "            url: dream.util.Common.BASE_URL + '/tsys/group/insertgroup',",
                            "            method: 'POST',",
                            "            jsonData: values,",
                            "            success: function(res) {",
                            "                Ext.Msg.alert('성공', '그룹이 추가되었습니다.');",
                            "                ",
                            "                groupGrid.getStore().reload(); // 그룹 목록 새로고침",
                            "            },",
                            "            failure: function(res) {",
                            "                Ext.Msg.alert('실패', '그룹 추가 실패');",
                            "            }",
                            "        });",
                            "    }",
                            "});",
                            "",
                            "",
                            "",
                            ""
                        ],
                        "name": "click",
                        "scope": "me"
                    },
                    "configAlternates": {
                        "fn": "string",
                        "implHandler": "code",
                        "name": "string",
                        "scope": "string"
                    },
                    "name": "onTsys1003_group_add_buttonClick",
                    "designerId": "6d45632c-595b-4d87-9d0a-210c81a9fd97"
                }
            ]
        },
        {
            "type": "Ext.button.Button",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "layout|x": 320,
                "layout|y": 50,
                "reference": "update_button",
                "text": "수정"
            },
            "configAlternates": {
                "layout|x": "number",
                "layout|y": "number",
                "text": "string",
                "id": "string",
                "reference": "string"
            },
            "name": "MyButton8",
            "designerId": "8a424dd5-4740-444d-b3d6-8606a0693ce8",
            "cn": [
                {
                    "type": "viewcontrollereventbinding",
                    "reference": {
                        "name": "listeners",
                        "type": "array"
                    },
                    "codeClass": null,
                    "userConfig": {
                        "fn": "onTsys1003_group_update_buttonClick",
                        "implHandler": [
                            "const form = this.lookupReference('tsys1003_group_form');",
                            "const groupGrid = this.lookupReference('tsys1003_group_grid');",
                            "const selectedGroup = groupGrid.getSelectionModel().getSelection()[0];",
                            "",
                            "if (!selectedGroup) {",
                            "    Ext.Msg.alert('알림', '삭제할 그룹을 선택해주세요.');",
                            "    return;",
                            "}",
                            "",
                            "if (!form.isValid()) {",
                            "    Ext.Msg.alert('알림', '필수 항목을 입력해주세요.');",
                            "    return;",
                            "}",
                            "",
                            "const values = form.getValues();",
                            "values.userCetCd = dream.util.Common.LOGIN_USER_CET_CD;",
                            "values.updateId = dream.util.Common.LOGIN_USER;",
                            "",
                            "Ext.Msg.confirm('확인', `그룹 [${values.groupCd}]을 수정하시겠습니까?`, function(btn) {",
                            "    if (btn === 'yes') {",
                            "        Ext.Ajax.request({",
                            "            url: dream.util.Common.BASE_URL + '/tsys/group/updategroup',",
                            "            method: 'PUT',",
                            "            jsonData: values,",
                            "            success: function(res) {",
                            "                Ext.Msg.alert('성공', '그룹이 수정되었습니다.');",
                            "",
                            "                groupGrid.getStore().reload(); // 그룹 목록 새로고침",
                            "            },",
                            "            failure: function(res) {",
                            "                Ext.Msg.alert('실패', '그룹 수정 실패');",
                            "            }",
                            "        });",
                            "    }",
                            "});",
                            "",
                            "",
                            "",
                            "",
                            ""
                        ],
                        "name": "click",
                        "scope": "me"
                    },
                    "configAlternates": {
                        "fn": "string",
                        "implHandler": "code",
                        "name": "string",
                        "scope": "string"
                    },
                    "name": "onTsys1003_group_update_buttonClick",
                    "designerId": "c3970956-acc2-4fca-8416-76a80a286123"
                }
            ]
        },
        {
            "type": "Ext.button.Button",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "layout|x": 180,
                "layout|y": 50,
                "reference": "search_button",
                "text": "검색"
            },
            "configAlternates": {
                "layout|x": "number",
                "layout|y": "number",
                "text": "string",
                "id": "string",
                "reference": "string"
            },
            "name": "MyButton19",
            "designerId": "15c54c67-52a8-4df4-80af-9b836a0e2e78",
            "cn": [
                {
                    "type": "viewcontrollereventbinding",
                    "reference": {
                        "name": "listeners",
                        "type": "array"
                    },
                    "codeClass": null,
                    "userConfig": {
                        "fn": "onTsys1003_search_buttonClick",
                        "implHandler": [
                            "const grid = Ext.ComponentQuery.query('grid[reference=tsys1003_group_grid]')[0];",
                            "const store = grid.getStore();",
                            "const keyword = this.lookupReference('tsys1003_search_keyword').getValue();",
                            "",
                            "store.getProxy().setExtraParams({",
                            "    userCetCd: dream.util.Common.LOGIN_USER_CET_CD,",
                            "    keyword: keyword",
                            "});",
                            "store.reload();"
                        ],
                        "name": "click",
                        "scope": "me"
                    },
                    "configAlternates": {
                        "fn": "string",
                        "implHandler": "code",
                        "name": "string",
                        "scope": "string"
                    },
                    "name": "onTsys1003_search_buttonClick",
                    "designerId": "eafb1a7b-bf38-4809-abe5-27d0f496e8a7"
                }
            ]
        },
        {
            "type": "Ext.button.Button",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "layout|x": 1130,
                "layout|y": 50,
                "reference": "group_add_button",
                "text": "추가"
            },
            "configAlternates": {
                "layout|x": "number",
                "layout|y": "number",
                "text": "string",
                "id": "string",
                "reference": "string"
            },
            "name": "MyButton18",
            "designerId": "c99ff99a-cbd8-4944-920d-31338a06f4f0",
            "cn": [
                {
                    "type": "viewcontrollereventbinding",
                    "reference": {
                        "name": "listeners",
                        "type": "array"
                    },
                    "codeClass": null,
                    "userConfig": {
                        "fn": "onTsys1003_group_user_add_buttonClick",
                        "implHandler": [
                            "",
                            "",
                            "",
                            "const popup = Ext.create('dream.view.tpop.tpop1001');",
                            "const me = this;",
                            "",
                            "popup.on('selectUser', function(win, record) {",
                            "    const userId = record.get('userId');",
                            "    const userCetCd = dream.util.Common.LOGIN_USER_CET_CD;",
                            "    const groupGrid = me.lookupReference('tsys1003_group_grid');",
                            "    const selectedGroup = groupGrid.getSelectionModel().getSelection()[0];",
                            "",
                            "    if (!selectedGroup) {",
                            "        Ext.Msg.alert('알림', '그룹을 먼저 선택하세요.');",
                            "        return;",
                            "    }",
                            "",
                            "    const groupCd = selectedGroup.get('groupCd');",
                            "",
                            "    // 사용자 추가 확인 메시지",
                            "    Ext.Msg.confirm('확인', `사용자 [${userId}]를 그룹에 추가하겠습니까?`, function (btn) {",
                            "        if (btn === 'yes') {",
                            "            Ext.Ajax.request({",
                            "                url: dream.util.Common.BASE_URL + '/tsys/group/insertuser',",
                            "                method: 'POST',",
                            "                jsonData: {",
                            "                    userId: userId,",
                            "                    groupCd: groupCd,",
                            "                    userCetCd: userCetCd,",
                            "                    insertId: dream.util.Common.LOGIN_USER",
                            "                },",
                            "                success: function (res) {",
                            "                    Ext.Msg.alert('성공', '사용자 추가 완료');",
                            "                    // 필요 시 사용자 그리드 새로고침",
                            "                    const userGrid = Ext.ComponentQuery.query('[reference=tsys1003_group_user_grid]')[0];",
                            "                    if (userGrid) {",
                            "                        const store = userGrid.getStore();",
                            "                        store.getProxy().setExtraParam('groupCd', groupCd);",
                            "                        store.getProxy().setExtraParam('userCetCd', userCetCd);",
                            "                        store.load();",
                            "                    }",
                            "                },",
                            "                failure: function (res) {",
                            "                    Ext.Msg.alert('실패', '사용자 추가 실패');",
                            "                }",
                            "            });",
                            "",
                            "            popup.close();",
                            "        }",
                            "    });",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "});",
                            "",
                            "popup.show();"
                        ],
                        "name": "click",
                        "scope": "me"
                    },
                    "configAlternates": {
                        "fn": "string",
                        "implHandler": "code",
                        "name": "string",
                        "scope": "string"
                    },
                    "name": "onTsys1003_group_user_add_buttonClick",
                    "designerId": "28b1e38a-8635-4614-afb6-6e68cd33a051"
                }
            ]
        },
        {
            "type": "Ext.button.Button",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "layout|x": 770,
                "layout|y": 50,
                "reference": "menu_update_button",
                "text": "수정"
            },
            "configAlternates": {
                "layout|x": "number",
                "layout|y": "number",
                "text": "string",
                "id": "string",
                "reference": "string"
            },
            "name": "MyButton1",
            "designerId": "30669307-f685-4d75-9b3b-abfdb00a5d7e",
            "cn": [
                {
                    "type": "viewcontrollereventbinding",
                    "reference": {
                        "name": "listeners",
                        "type": "array"
                    },
                    "codeClass": null,
                    "userConfig": {
                        "fn": "onTsys1003_menu_update_buttonClick",
                        "implHandler": [
                            "const grid = Ext.ComponentQuery.query('grid[reference=tsys1003_group_grid]')[0];",
                            "const selected = grid.getSelectionModel().getSelection();",
                            "if (!selected.length) return;",
                            "const record = selected[0]; // 첫 번째 선택 항목",
                            "const groupCd = record.get('groupCd');",
                            "",
                            "const tree = this.lookupReference('tsys1003_tree');",
                            "const userCetCd = dream.util.Common.LOGIN_USER_CET_CD;",
                            "const userId = dream.util.Common.LOGIN_USER;",
                            "const checkedMenuIds = [];",
                            "",
                            "// 체크된 메뉴 노드 순회하여 저장",
                            "tree.getRootNode().cascadeBy(function(node) {",
                            "    if (node.get('checked')) {",
                            "        checkedMenuIds.push(node.get('menuId'));",
                            "    }",
                            "});",
                            "",
                            "console.log(checkedMenuIds);",
                            "",
                            "// 2. 저장 요청",
                            "Ext.Ajax.request({",
                            "    url: dream.util.Common.BASE_URL + '/tsys/group/insert/' + groupCd,",
                            "    method: 'POST',",
                            "    params: {",
                            "        userCetCd: userCetCd,",
                            "        userId: userId,",
                            "        groupCd: groupCd",
                            "    },",
                            "    jsonData: checkedMenuIds, // ← ['WBAS1001', 'WBAS2002', ...]",
                            "    success: function(response) {",
                            "        Ext.Msg.alert('성공', '메뉴 권한이 저장되었습니다.');",
                            "    },",
                            "    failure: function(response) {",
                            "        Ext.Msg.alert('오류', '저장에 실패했습니다.');",
                            "    }",
                            "});",
                            "",
                            "",
                            "",
                            "",
                            "",
                            ""
                        ],
                        "name": "click",
                        "scope": "me"
                    },
                    "configAlternates": {
                        "fn": "string",
                        "implHandler": "code",
                        "name": "string",
                        "scope": "string"
                    },
                    "name": "onTsys1003_menu_update_buttonClick",
                    "designerId": "da70395b-ceae-4f6b-bc03-8138e9df02b4"
                }
            ]
        },
        {
            "type": "Ext.button.Button",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "layout|x": 360,
                "layout|y": 50,
                "reference": "delete_button",
                "text": "삭제"
            },
            "configAlternates": {
                "layout|x": "number",
                "layout|y": "number",
                "text": "string",
                "id": "string",
                "reference": "string"
            },
            "name": "MyButton16",
            "designerId": "2be6cd51-30a1-4cde-9474-cf04e6435256",
            "cn": [
                {
                    "type": "viewcontrollereventbinding",
                    "reference": {
                        "name": "listeners",
                        "type": "array"
                    },
                    "codeClass": null,
                    "userConfig": {
                        "fn": "onTsys1003_group_delete_buttonClick",
                        "implHandler": [
                            "const groupGrid = this.lookupReference('tsys1003_group_grid');",
                            "const selectedGroup = groupGrid.getSelectionModel().getSelection()[0];",
                            "const userCetCd = dream.util.Common.LOGIN_USER_CET_CD;",
                            "",
                            "if (!selectedGroup) {",
                            "    Ext.Msg.alert('알림', '삭제할 그룹을 선택해주세요.');",
                            "    return;",
                            "}",
                            "",
                            "const groupCd = selectedGroup.get('groupCd');",
                            "",
                            "Ext.Msg.confirm('확인', `[${groupCd}]를 삭제하시겠습니까?`, function(btn) {",
                            "        if (btn === 'yes') {",
                            "            Ext.Ajax.request({",
                            "                url: dream.util.Common.BASE_URL + '/tsys/group/deletegroup',",
                            "                method: 'DELETE',",
                            "                jsonData: {",
                            "                    userCetCd: userCetCd,",
                            "                    groupCd: groupCd",
                            "",
                            "                },",
                            "                success: function(response) {",
                            "                    Ext.Msg.alert('성공', '삭제 완료');",
                            "                    groupGrid.getStore().reload(); // 사용자 목록 새로고침",
                            "                },",
                            "                failure: function(response) {",
                            "                    Ext.Msg.alert('오류', '삭제 실패');",
                            "                }",
                            "            });",
                            "        }",
                            "});"
                        ],
                        "name": "click",
                        "scope": "me"
                    },
                    "configAlternates": {
                        "fn": "string",
                        "implHandler": "code",
                        "name": "string",
                        "scope": "string"
                    },
                    "name": "onTsys1003_group_delete_buttonClick",
                    "designerId": "30d83260-a787-49c2-bc3c-0758d37551ac"
                }
            ]
        },
        {
            "type": "Ext.button.Button",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "layout|x": 1170,
                "layout|y": 50,
                "reference": "group_delete_button",
                "text": "삭제"
            },
            "configAlternates": {
                "layout|x": "number",
                "layout|y": "number",
                "text": "string",
                "id": "string",
                "reference": "string"
            },
            "name": "MyButton17",
            "designerId": "11676a91-cec1-45a0-b7f4-b1cff0e803e5",
            "cn": [
                {
                    "type": "viewcontrollereventbinding",
                    "reference": {
                        "name": "listeners",
                        "type": "array"
                    },
                    "codeClass": null,
                    "userConfig": {
                        "fn": "onTsys1003_group_user_delete_buttonClick",
                        "implHandler": [
                            "const userGrid = this.lookupReference('tsys1003_group_user_grid');",
                            "const selectedUser = userGrid.getSelectionModel().getSelection()[0];",
                            "",
                            "const groupGrid = this.lookupReference('tsys1003_group_grid');",
                            "const selectedGroup = groupGrid.getSelectionModel().getSelection()[0];",
                            "",
                            "const userCetCd = dream.util.Common.LOGIN_USER_CET_CD;",
                            "",
                            "if (!selectedGroup || !selectedUser) {",
                            "    Ext.Msg.alert('알림', '그룹과 사용자를 모두 선택해주세요.');",
                            "    return;",
                            "}",
                            "",
                            "const groupCd = selectedGroup.get('groupCd');",
                            "const userId = selectedUser.get('USER_ID');",
                            "",
                            "Ext.Msg.confirm('확인', `사용자 [${userId}]를 그룹에서 삭제하시겠습니까?`, function(btn) {",
                            "    if (btn === 'yes') {",
                            "        Ext.Ajax.request({",
                            "            url: dream.util.Common.BASE_URL + '/tsys/group/deleteuser',",
                            "            method: 'DELETE',",
                            "            jsonData: {",
                            "                userCetCd: userCetCd,",
                            "                groupCd: groupCd,",
                            "                userId: userId",
                            "            },",
                            "            success: function(response) {",
                            "                Ext.Msg.alert('성공', '삭제 완료');",
                            "                userGrid.getStore().reload(); // 사용자 목록 새로고침",
                            "            },",
                            "            failure: function(response) {",
                            "                Ext.Msg.alert('오류', '삭제 실패');",
                            "            }",
                            "        });",
                            "    }",
                            "});",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            ""
                        ],
                        "name": "click",
                        "scope": "me"
                    },
                    "configAlternates": {
                        "fn": "string",
                        "implHandler": "code",
                        "name": "string",
                        "scope": "string"
                    },
                    "name": "onTsys1003_group_user_delete_buttonClick",
                    "designerId": "52afc8d7-b34e-431b-b756-4227dbf930c1"
                }
            ]
        },
        {
            "type": "Ext.grid.Panel",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "height": 750,
                "layout|x": 820,
                "layout|y": 80,
                "reference": "tsys1003_group_user_grid",
                "store": "tsys.groupUserGridStore",
                "title": "그룹소속 사용자",
                "width": 400
            },
            "configAlternates": {
                "height": "auto",
                "layout|x": "number",
                "layout|y": "number",
                "title": "string",
                "width": "auto",
                "reference": "string",
                "store": "store"
            },
            "name": "MyGridPanel2",
            "designerId": "964a47fb-6870-48c5-a569-08ce9c394d8e",
            "cn": [
                {
                    "type": "Ext.grid.column.RowNumberer",
                    "reference": {
                        "name": "columns",
                        "type": "array"
                    },
                    "codeClass": null,
                    "userConfig": {
                        "text": "NO",
                        "width": 43
                    },
                    "configAlternates": {
                        "text": "string",
                        "width": "number"
                    },
                    "name": "MyRowNumberer1",
                    "designerId": "5c6f60cc-e1ac-4655-b756-803df29c9869"
                },
                {
                    "type": "Ext.grid.column.Column",
                    "reference": {
                        "name": "columns",
                        "type": "array"
                    },
                    "codeClass": null,
                    "userConfig": {
                        "dataIndex": "DEPT_NM",
                        "text": "부서명",
                        "width": 146
                    },
                    "configAlternates": {
                        "text": "string",
                        "dataIndex": "datafield",
                        "width": "auto"
                    },
                    "name": "MyColumn6",
                    "designerId": "7a68f17d-ea1e-4f20-bfd9-d8c1717a0f9e"
                },
                {
                    "type": "Ext.grid.column.Column",
                    "reference": {
                        "name": "columns",
                        "type": "array"
                    },
                    "codeClass": null,
                    "userConfig": {
                        "dataIndex": "USER_NM",
                        "text": "사용자명"
                    },
                    "configAlternates": {
                        "text": "string",
                        "dataIndex": "datafield"
                    },
                    "name": "MyColumn7",
                    "designerId": "cd07247e-7578-42ec-9301-1435c648f810"
                },
                {
                    "type": "Ext.grid.column.Column",
                    "reference": {
                        "name": "columns",
                        "type": "array"
                    },
                    "codeClass": null,
                    "userConfig": {
                        "dataIndex": "USER_ID",
                        "text": "사용자ID"
                    },
                    "configAlternates": {
                        "text": "string",
                        "dataIndex": "datafield"
                    },
                    "name": "MyColumn2",
                    "designerId": "e8ccebc3-360d-457c-980c-811e9a96d309"
                },
                {
                    "type": "viewcontrollereventbinding",
                    "reference": {
                        "name": "listeners",
                        "type": "array"
                    },
                    "codeClass": null,
                    "userConfig": {
                        "fn": "onGridpanelAfterRender_tsys1003_groupusergrid",
                        "implHandler": [
                            "const grid = Ext.ComponentQuery.query('grid[reference=tsys1003_group_user_grid]')[0];",
                            "const store = grid.getStore();",
                            "",
                            "store.getProxy().setUrl(dream.util.Common.BASE_URL+'/tsys/group/groupuserlist');",
                            "",
                            "store.getProxy().setExtraParams({",
                            "    userCetCd: dream.util.Common.LOGIN_USER_CET_CD",
                            "});",
                            "",
                            ""
                        ],
                        "name": "afterrender",
                        "scope": "me"
                    },
                    "configAlternates": {
                        "fn": "string",
                        "implHandler": "code",
                        "name": "string",
                        "scope": "string"
                    },
                    "name": "onGridpanelAfterRender_tsys1003_groupusergrid",
                    "designerId": "e20099bd-d056-4d30-9003-90612204274a"
                }
            ]
        },
        {
            "type": "Ext.form.Panel",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "bodyPadding": 10,
                "height": 180,
                "layout": "auto",
                "layout|x": 0,
                "layout|y": 650,
                "reference": "tsys1003_group_form",
                "title": "",
                "width": 400
            },
            "configAlternates": {
                "bodyPadding": "auto",
                "height": "auto",
                "layout": "string",
                "layout|x": "number",
                "layout|y": "number",
                "title": "string",
                "width": "auto",
                "reference": "string"
            },
            "name": "MyForm5",
            "designerId": "09e3a441-e8d2-4edb-b6c0-a41958089f70",
            "cn": [
                {
                    "type": "Ext.form.field.Text",
                    "reference": {
                        "name": "items",
                        "type": "array"
                    },
                    "codeClass": null,
                    "userConfig": {
                        "fieldLabel": "그룹코드",
                        "labelWidth": 80,
                        "name": "groupCd"
                    },
                    "configAlternates": {
                        "fieldLabel": "string",
                        "labelWidth": "number",
                        "name": "string"
                    },
                    "name": "MyTextField3",
                    "designerId": "b11b7bff-075c-4811-ae6e-52728a28c244"
                },
                {
                    "type": "Ext.form.field.Text",
                    "reference": {
                        "name": "items",
                        "type": "array"
                    },
                    "codeClass": null,
                    "userConfig": {
                        "fieldLabel": "그룹명",
                        "labelWidth": 80,
                        "name": "groupNm"
                    },
                    "configAlternates": {
                        "fieldLabel": "string",
                        "labelWidth": "number",
                        "name": "string"
                    },
                    "name": "MyTextField4",
                    "designerId": "0be58cb6-adc3-4ab9-98a8-999153e758af"
                },
                {
                    "type": "Ext.form.field.ComboBox",
                    "reference": {
                        "name": "items",
                        "type": "array"
                    },
                    "codeClass": null,
                    "userConfig": {
                        "displayField": "codeNm",
                        "fieldLabel": "사용여부",
                        "labelWidth": 80,
                        "name": "useYn",
                        "valueField": "codeCd"
                    },
                    "configAlternates": {
                        "fieldLabel": "string",
                        "labelWidth": "number",
                        "name": "string",
                        "displayField": "datafield",
                        "valueField": "datafield"
                    },
                    "name": "MyComboBox",
                    "designerId": "06a56137-9f08-41e6-95ca-e5060003c9fa",
                    "cn": [
                        {
                            "type": "viewcontrollereventbinding",
                            "reference": {
                                "name": "listeners",
                                "type": "array"
                            },
                            "codeClass": null,
                            "userConfig": {
                                "fn": "onComboboxAfterRender_tsys1003_cbo_useyn",
                                "implHandler": [
                                    "dream.util.Common.setFlagCombo(component,\"사용\",\"\",\"\");"
                                ],
                                "name": "afterrender",
                                "scope": "me"
                            },
                            "configAlternates": {
                                "fn": "string",
                                "implHandler": "code",
                                "name": "string",
                                "scope": "string"
                            },
                            "name": "onComboboxAfterRender_tsys1003_cbo_useyn",
                            "designerId": "740122c6-a589-4b46-9e55-d04d52fa496f"
                        }
                    ]
                },
                {
                    "type": "Ext.form.field.Text",
                    "reference": {
                        "name": "items",
                        "type": "array"
                    },
                    "codeClass": null,
                    "userConfig": {
                        "fieldLabel": "비고사항",
                        "labelWidth": 80,
                        "name": "bigo",
                        "width": 350
                    },
                    "configAlternates": {
                        "fieldLabel": "string",
                        "labelWidth": "number",
                        "width": "auto",
                        "name": "string"
                    },
                    "name": "MyTextField13",
                    "designerId": "c8c7ffa1-45a6-4a59-be04-298b551b8c94"
                }
            ]
        },
        {
            "type": "Ext.form.Label",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "layout|x": 10,
                "layout|y": 10,
                "text": "권한관리 [TSYS1003]"
            },
            "configAlternates": {
                "layout|x": "number",
                "layout|y": "number",
                "text": "string"
            },
            "name": "MyLabel5",
            "designerId": "66cbc7b5-0a0a-4362-b602-f697b9f14a07"
        },
        {
            "type": "Ext.form.field.Text",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fieldLabel": "그룹명",
                "labelWidth": 50,
                "layout|x": 10,
                "layout|y": 50,
                "reference": "search_keyword",
                "width": 160
            },
            "configAlternates": {
                "fieldLabel": "string",
                "labelWidth": "number",
                "layout|x": "number",
                "layout|y": "number",
                "width": "auto",
                "id": "string",
                "reference": "string"
            },
            "name": "MyTextField39",
            "designerId": "f33ccb07-452d-44b6-a427-22f09b813c05",
            "cn": [
                {
                    "type": "viewcontrollereventbinding",
                    "reference": {
                        "name": "listeners",
                        "type": "array"
                    },
                    "codeClass": null,
                    "userConfig": {
                        "fn": "onTsys1003_search_keywordAfterRender",
                        "implHandler": [
                            "const button = this.lookupReference('search_keyword');",
                            "",
                            "component.on('specialkey', function(component, e) {",
                            "    if (e.getKey() === e.ENTER) {",
                            "        ",
                            "        if (button) {",
                            "            button.fireEvent('click', button);",
                            "        }",
                            "    }",
                            "});"
                        ],
                        "name": "afterrender",
                        "scope": "me"
                    },
                    "configAlternates": {
                        "fn": "string",
                        "implHandler": "code",
                        "name": "string",
                        "scope": "string"
                    },
                    "name": "onTsys1003_search_keywordAfterRender",
                    "designerId": "227d2d53-fdb2-4dfb-9fb6-c5e88bd180ba"
                }
            ]
        },
        {
            "type": "Ext.tree.Panel",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "checkPropagation": "both",
                "displayField": "menuNm",
                "height": 750,
                "layout|x": 410,
                "layout|y": 80,
                "reference": "tsys1003_tree",
                "title": "사용 프로그램 목록",
                "width": 400
            },
            "configAlternates": {
                "checkPropagation": "string",
                "displayField": "datafield",
                "height": "auto",
                "layout|x": "number",
                "layout|y": "number",
                "reference": "string",
                "title": "string",
                "width": "auto"
            },
            "name": "MyTreePanel",
            "designerId": "8c4e731c-d235-43bd-9f9b-fe9aec0af7eb",
            "cn": [
                {
                    "type": "Ext.tree.View",
                    "reference": {
                        "name": "viewConfig",
                        "type": "object"
                    },
                    "codeClass": null,
                    "name": "MyTreeView",
                    "designerId": "b055899b-a486-46cc-9615-acef200b5de5"
                },
                {
                    "type": "viewcontrollereventbinding",
                    "reference": {
                        "name": "listeners",
                        "type": "array"
                    },
                    "codeClass": null,
                    "userConfig": {
                        "fn": "onTreepanelAfterRender_tsys1003_tree",
                        "implHandler": [
                            "        Ext.Ajax.request({",
                            "            url: dream.util.Common.BASE_URL + '/system/menu/all',",
                            "            method: 'GET',",
                            "            success: function(response) {",
                            "                const data = Ext.decode(response.responseText);",
                            "                const rootNode = component.getRootNode();",
                            "                rootNode.removeAll(true);",
                            "                rootNode.appendChild(data); // 각 노드에 checked: true/false 포함되어야 함",
                            "                rootNode.expand(true);",
                            "            },",
                            "            failure: function() {",
                            "                Ext.Msg.alert('오류', '메뉴 데이터를 불러오지 못했습니다.');",
                            "            }",
                            "        });"
                        ],
                        "name": "afterrender",
                        "scope": "me"
                    },
                    "configAlternates": {
                        "fn": "string",
                        "implHandler": "code",
                        "name": "string",
                        "scope": "string"
                    },
                    "name": "onTreepanelAfterRender_tsys1003_tree",
                    "designerId": "fda1e4f2-0ad6-423c-9af3-142b8d7843ff"
                }
            ]
        }
    ]
}
/*
 * File: app/view/tpop/tpop1005ViewController.js
 *
 * This file was generated by Sencha Architect version 4.3.7.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 7.9.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 7.9.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('dream.view.tpop.tpop1005ViewController', {
    extend: 'Ext.app.ViewController',
    alias: 'controller.tpop.tpop1005',

    onGridpanelAfterRender_tpop1005_cus_grid: function(component, eOpts) {
        const store = component.getStore();

        // 1. proxy의 URL을 동적으로 설정
        store.getProxy().setUrl(dream.util.Common.BASE_URL+'/tpop/1005/cuslist');

        // 2. 필요 시 추가 파라미터 설정 (예: userCetCd 등)
        store.getProxy().setExtraParams({
            userCetCd: dream.util.Common.LOGIN_USER_CET_CD
        });

        // 3. 스토어 리로드
        store.reload();
    },

    onGridpanelItemDblClick_tpop1005_cus_grid: function(dataview, record, item, index, e, eOpts) {
        const view = this.getView();
        view.fireEvent('selectUser', view, record);
        view.close();
    },

    onTpop1005_keywordAfterRender: function(component, eOpts) {
        const button = this.lookupReference('searchButton');
        component.on('specialkey', function(component, e) {
            if (e.getKey() === e.ENTER) {

                if (button) {
                    button.fireEvent('click', button);
                }
            }
        });
    },

    onTpop1005_search_buttonClick: function(button, e, eOpts) {
        const grid = Ext.ComponentQuery.query('grid[reference=tpop1005_cus_grid]')[0];
        const store = grid.getStore();
        const keyword = this.lookupReference('tpop1005_keyword').getValue();

        store.getProxy().setExtraParams({
            userCetCd: dream.util.Common.LOGIN_USER_CET_CD,
            keyword: keyword
        });

        store.reload();

    },

    onTpop1005_confirm_buttonClick: function(button, e, eOpts) {
        const view = this.getView();
        const grid = view.lookupReference('tpop1005_cus_grid');
        const selection = grid.getSelectionModel().getSelection();

        if (selection.length === 0) {
            Ext.Msg.alert('알림', '코스를 선택해주세요.');
            return;
        }

        const record = selection[0];
        view.fireEvent('selectUser', view, record);
        view.close();
    },

    onTpop1005_cancel_buttonClick: function(button, e, eOpts) {
        button.up('window').close();
    },

    onWindowBeforeRender_tpop1005_window: function(component, eOpts) {
        Ext.Ajax.request({
            url: dream.util.Common.BASE_URL + '/api/code/1001',
            method: 'GET',
            success: function(response) {
                const codeList = Ext.decode(response.responseText);
                dream.util.Common.setCodeData('1001', codeList);
            }
        });
    }

});
